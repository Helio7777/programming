C51 COMPILER V9.57.0.0   B2                                                                06/21/2024 18:50:07 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE B2
OBJECT MODULE PLACED IN .\Objects\b2.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE b2.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\b2.lst
                    -) TABS(2) OBJECT(.\Objects\b2.obj)

line level    source

   1          #include <reg52.h>
   2          #include "lcd.h"
   3          #include "key.h"
   4          #include "uart.h"
   5          #include "xor.h"
   6          unsigned char calkey(unsigned char *str);
   7          void clear_string_all(char* str, int length);
   8          unsigned char rec_data;
   9            unsigned char msg[16];
  10            unsigned char key[16];
  11            unsigned char ctext[16];
  12          unsigned key1=-1;
  13          void Delay_nms(unsigned int ms);
  14          //void clear_string_all(char* str, int length)；
  15          void main()
  16          {
  17   1        unsigned int rec=1,tykey=0;
  18   1        unsigned char keynum;
  19   1                    P1 = 0xff;
  20   1            uart_init(0xFA); // 9600
  21   1          LCD_Init();
  22   1          //Delay_nms(50);
  23   1          UartSendByte(0);
  24   1          while(1)
  25   1          {
  26   2              keynum = Matrixkey_Scan();
  27   2              if(keynum == 13) {LCD_ShowString(0, 1, "TYPE THE KEY");tykey = 1;}
  28   2              if(keynum == 15) {rec = 0;}
  29   2              if(keynum == 16) {rec = 1;}
  30   2              //输入明文
  31   2              if(keynum != 0&& rec!=1&&keynum != 15&&tykey!=1&&keynum != 11&&keynum != 12&&keynum != 13&&keynum 
             -!= 14)
  32   2              {
  33   3                  //LCD_Init();
  34   3                LCD_ShowString(0, 1, "Text:");
  35   3                if(keynum!=10)
  36   3                  keynum += '0';
  37   3                else
  38   3                  keynum = '0';
  39   3                if(key1!=-1){
  40   4                append_char_to_string(keynum, msg);
  41   4                LCD_ShowString(0, 7, msg);
  42   4                  //append_char_to_string(keynum+5,ctext);
  43   4                  //LCD_ShowString(0, 7, msg);
  44   4                UartSendByte(keynum+key1); // 使用发送函数
  45   4                Delay_nms(500);
  46   4                }else
  47   3                {
  48   4                LCD_ShowString(0,1,"DO NOT HAVE KEY");
  49   4                }
  50   3                //P1 = 0xff;
  51   3                //LCD_ShowString(1, 1, "PRESSED");
  52   3              }
  53   2              //输入KEY
C51 COMPILER V9.57.0.0   B2                                                                06/21/2024 18:50:07 PAGE 2   

  54   2              if(keynum != 0&&keynum != 11&&keynum != 12&&keynum != 13&&keynum != 14&&keynum != 15&&keynum != 16&&ty
             -key==1)
  55   2              {
  56   3                  LCD_ShowString(0, 1, "KEY             ");
  57   3                if(keynum!=10)
  58   3                  keynum += '0';
  59   3                else
  60   3                  keynum = '0';
  61   3                  append_char_to_string(keynum, key);
  62   3                  LCD_ShowString(0, 7, key);
  63   3                key1=calkey(key);
  64   3              }
  65   2              //结束输入KEY
  66   2              if(keynum != 0&&keynum == 14&&tykey==1)
  67   2              {
  68   3                tykey=0;
  69   3                LCD_ShowString(1,1,"Key:");
  70   3                LCD_ShowString(1,5,key);
  71   3                LCD_ShowString(0,1,"                ");
  72   3              }
  73   2              //清除按键
  74   2              if(keynum != 0&&keynum == 12)
  75   2              {
  76   3                clear_string_all(key,16);
  77   3                clear_string_all(msg,16);
  78   3                clear_string_all(ctext,16);
  79   3                key1=-1;
  80   3                tykey = 0;
  81   3                LCD_ShowString(0,1,"                ");
  82   3                LCD_ShowString(1,1,"                ");
  83   3                
  84   3              }
  85   2              
  86   2              /*if(keynum != 0&&keynum == 11)
  87   2              {
  88   2                if(msg[0]!='\0'){
  89   2                XOR_EncryptDecrypt(msg,key,StringLength(msg),StringLength(key));
  90   2                UartSendString(msg);
  91   2              
  92   2                }
  93   2              }*/
  94   2          }
  95   1      }
  96          
  97          void uart() interrupt 4
  98          {
  99   1          if (RI)
 100   1          {
 101   2              rec_data = SBUF;
 102   2              RI = 0; // 清除接收中断标志
 103   2            if(rec_data != 0){
 104   3                  rec_data=(rec_data-key1);
 105   3                  append_char_to_string(rec_data, msg);
 106   3                  LCD_Init();
 107   3                  LCD_ShowString(0, 1, "Text:");
 108   3                  LCD_ShowString(0, 7, msg);
 109   3                  LCD_ShowString(1,1,"Key:");
 110   3                LCD_ShowString(1,5,key);
 111   3                //LCD_ShowString(0,1,"                ");
 112   3                  //LCD_ShowString(1, 1, "PRESSED");
 113   3          }
 114   2        }
C51 COMPILER V9.57.0.0   B2                                                                06/21/2024 18:50:07 PAGE 3   

 115   1      }
 116          
 117          void Delay_nms(unsigned int ms)
 118          {
 119   1          unsigned int i, j;
 120   1          for(i = 0; i < ms; i++)
 121   1          {
 122   2              for(j = 0; j < 123; j++);
 123   2          }
 124   1      }
 125          
 126          void clear_string_all(char* str, int length) {
 127   1        int i = 0;
 128   1          for (; i < length; i++) {
 129   2              str[i] = '\0';
 130   2          }
 131   1      }
 132          
 133          unsigned char calkey(unsigned char *str)
 134          {
 135   1          unsigned int sum = 0; // 使用unsigned int确保不会溢出
 136   1          unsigned char i = 0;
 137   1      
 138   1          // 遍历字符串，直到遇到结束符'\0'
 139   1          while(str[i] != '\0')
 140   1          {
 141   2              sum += str[i]; // 将当前字符的ASCII值加到sum
 142   2              i++;
 143   2          }
 144   1      
 145   1          return sum;// % 10; // 对sum取10的余数并返回
 146   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    744    ----
   CONSTANT SIZE    =     74    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     51      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.57.0.0   CAL                                                               06/23/2024 11:37:09 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE CAL
OBJECT MODULE PLACED IN .\Objects\cal.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE cal.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\cal.l
                    -st) TABS(2) OBJECT(.\Objects\cal.obj)

line level    source

   1          #include <reg52.h>  // 包含51单片机的头文件
   2          #include <stdio.h>  // 包含标准输入输出库
   3          
   4          #include "lcd.h"
   5          
   6          #define uchar unsigned char
   7          #define uint unsigned int
   8          
   9          
  10          // 用于存储操作数和操作符
  11          long num1 = 0, num2 = 0;
  12          char operation = 0;
  13          uchar buffer[16];
  14          //char temp = '\0'; 
  15            
  16          void append_char_to_string(char c, char* str);
  17          void Clear_line(int n)
  18          {
  19   1        LCD_ShowString(n,1,"                ");
  20   1      }
  21          // 显示在LCD上的函数
  22          void DisplayResult(long result) {
  23   1          sprintf(buffer, "%ld", result);
  24   1          LCD_ShowString(0, 1, buffer);
  25   1      }
  26          
  27          void append_string_to_string(char* str1, char* str2) {
  28   1          int i=0;
  29   1          while(str2[i] != '\0') {
  30   2              append_char_to_string(str2[i], str1);
  31   2              i++;
  32   2          }
  33   1      }
  34          
  35          void append_char_to_string(char c, char* str) {
  36   1          int len = 0;
  37   1      
  38   1          // Find the current end of the string
  39   1          while(str[len] != '\0') {
  40   2              len++;
  41   2          }
  42   1      
  43   1          // Add the new character to the end of the string
  44   1          str[len] = c;
  45   1      
  46   1          // Null terminate the new string
  47   1          str[len+1] = '\0';
  48   1      }
  49          
  50          void clear_string_all(char* str, int length) {
  51   1        int i = 0;
  52   1          for (; i < length; i++) {
  53   2              str[i] = '\0';
  54   2          }
C51 COMPILER V9.57.0.0   CAL                                                               06/23/2024 11:37:09 PAGE 2   

  55   1      }
  56          
  57          void ConvertToBase(long number, int base, char *result) {
  58   1          char digits[] = "0123456789ABCDEF";
  59   1          int i = 0, j;
  60   1          char temp;
  61   1      
  62   1          // 特殊情况：如果数字为0
  63   1          if (number == 0) {
  64   2              result[0] = '0';
  65   2              result[1] = '\0';
  66   2              return;
  67   2          }
  68   1      
  69   1          // 转换过程
  70   1          while (number > 0) {
  71   2              result[i++] = digits[number % base];
  72   2              number /= base;
  73   2          }
  74   1          result[i] = '\0';
  75   1      
  76   1          // 反转字符串
  77   1          for (j = 0; j < i / 2; j++) {
  78   2              temp = result[j];
  79   2              result[j] = result[i - j - 1];
  80   2              result[i - j - 1] = temp;
  81   2          }
  82   1      }
  83          
  84          
  85          // 计算器功能函数，接受按键值keynum
  86          void Calculator(char keynum) {
  87   1          static long result = 0;
  88   1          static uchar is_result_displayed = 0;
  89   1          static char f[16] = "\0";
  90   1          int nn = 0;
  91   1          append_char_to_string(keynum, f);
  92   1          LCD_ShowString(1,1,f);
  93   1          // 如果是数字键
  94   1          if (keynum >= '0' && keynum <= '9') {
  95   2              if (is_result_displayed) {
  96   3                  num1 = 0;
  97   3                  is_result_displayed = 0;
  98   3              }
  99   2              num1 = num1 * 10 + (keynum - '0');
 100   2              sprintf(buffer, "%ld", num1);
 101   2              //LCD_ShowString(0, 1, buffer);
 102   2          } 
 103   1          // 如果是操作符
 104   1          else if (keynum == '+' || keynum == '-' || keynum == 'X' || keynum == '/') {
 105   2                    //sprintf(buffer, "%ld", num1);
 106   2              //LCD_ShowString(1, 1, buffer);
 107   2              operation = keynum;
 108   2              num2 = num1;
 109   2              num1 = 0;
 110   2            //Clear_line(0);
 111   2          } 
 112   1          // 如果是等号键
 113   1          else if (keynum == '=') {
 114   2              switch (operation) {
 115   3                  case '+':
 116   3                      result = num2 + num1;
C51 COMPILER V9.57.0.0   CAL                                                               06/23/2024 11:37:09 PAGE 3   

 117   3                      break;
 118   3                  case '-':
 119   3                      result = num2 - num1;
 120   3                      break;
 121   3                  case 'X':
 122   3                      result = num2 * num1;
 123   3                      break;
 124   3                  case '/':
 125   3                      if (num1 != 0) {
 126   4                          result = num2 / num1;
 127   4                          nn = num2*10/num1;
 128   4                          nn = nn%10;
 129   4                      } else {
 130   4                          LCD_ShowString(0, 1, "Error           ");
 131   4                          return;
 132   4                      }
 133   3                      break;
 134   3                  case 0:
 135   3                    if(num1==0)
 136   3                      {
 137   4                        LCD_ShowString(0,1,"B21022515");
 138   4                        Clear_line(1);
 139   4                        LCD_ShowString(1,1,"0");
 140   4                        clear_string_all(f,16);
 141   4                      }
 142   3                    if(num2==0){
 143   4                      num2=num1;
 144   4                      num1=0;
 145   4                      return;
 146   4                    }if(num1!=0&&num2!=0){
 147   4                    ConvertToBase(num2,num1,buffer);
 148   4                    append_string_to_string(f, buffer);
 149   4                    LCD_ShowString(1,1,f);
 150   4                    is_result_displayed = 0;
 151   4                    num1 = result;
 152   4                    num2 = 0;
 153   4                      return;
 154   4                    } 
 155   3                  break;
 156   3                  default:
 157   3                      //LCD_ShowString(0, 1, "No Op");
 158   3                      return;
 159   3              }
 160   2                      //Clear_line(0);
 161   2                      //Clear_line(1);
 162   2              //DisplayResult(result);
 163   2              sprintf(buffer,"%ld",result);
 164   2              append_string_to_string(f, buffer);
 165   2              if(nn!=0){
 166   3              sprintf(buffer,".%d",nn);
 167   3              append_string_to_string(f, buffer);
 168   3              }
 169   2              if(f[16]!='\0')
 170   2              {
 171   3                Clear_line(0);
 172   3                LCD_ShowString(0,1,"ERROR!");
 173   3              }
 174   2              //LCD_ShowString(0,1,buffer);
 175   2              LCD_ShowString(1,1,f);
 176   2              is_result_displayed = 0;
 177   2              num1 = result;
 178   2              num2 = 0;
C51 COMPILER V9.57.0.0   CAL                                                               06/23/2024 11:37:09 PAGE 4   

 179   2              operation=0;
 180   2      
 181   2          } 
 182   1          // 如果是归零键
 183   1          else if (keynum == 'C') {
 184   2              num1 = 0;
 185   2              num2 = 0;
 186   2              operation = 0;
 187   2              clear_string_all(f,16);
 188   2              LCD_Init();
 189   2              LCD_ShowString(1, 1, "0");
 190   2          }
 191   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1300    ----
   CONSTANT SIZE    =     78    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     46      49
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
